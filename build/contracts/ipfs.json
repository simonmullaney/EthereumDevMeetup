{
  "contractName": "ipfs",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "results",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oraclizeID",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "result",
          "type": "string"
        }
      ],
      "name": "LogOraclizeResult",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getIPFSData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611115806100746000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461006f57806338bbfa50146100e6578063a48bdb7c146101a3578063d33b722b14610233578063d98645c51461024a575b005b34801561007b57600080fd5b506100e46004803603810190808035600019169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061027d565b005b3480156100f257600080fd5b506101a16004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610375565b005b3480156101af57600080fd5b506101b861037a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f85780820151818401526020810190506101dd565b50505050905090810190601f1680156102255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023f57600080fd5b50610248610418565b005b34801561025657600080fd5b5061025f6104b6565b60405180826000191660001916815260200191505060405180910390f35b6102856104bc565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102be57600080fd5b80600690805190602001906102d4929190611044565b507f2815ee1f0b16b8cbb7d1e88f4b89c58a774fd2635ca81dcad8bfd04d735dc251816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033757808201518184015260208101905061031c565b50505050905090810190601f1680156103645780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b505050565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b505050505081565b6104b36040805190810160405280600481526020017f4950465300000000000000000000000000000000000000000000000000000000815250606060405190810160405280602e81526020017f516d633268705a46753365674642435a636d324a587250544d4d6259346b705281526020017f486750566e7178744571396e6557000000000000000000000000000000000000815250610703565b50565b60055481565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061052c5750600061052a6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b8e565b145b1561053d5761053b6000610b99565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156105c257600080fd5b505af11580156105d6573d6000803e3d6000fd5b505050506040513d60208110156105ec57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156106c357600080fd5b505af11580156106d7573d6000803e3d6000fd5b505050506040513d60208110156106ed57600080fd5b8101908080519060200190929190505050905090565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610775575060006107736000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b8e565b145b15610786576107846000610b99565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561080b57600080fd5b505af115801561081f573d6000803e3d6000fd5b505050506040513d602081101561083557600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610930578082015181840152602081019050610915565b50505050905090810190601f16801561095d5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561097c57600080fd5b505af1158015610990573d6000803e3d6000fd5b505050506040513d60208110156109a657600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156109dc5760006001029150610b87565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610a94578082015181840152602081019050610a79565b50505050905090810190601f168015610ac15780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610afa578082015181840152602081019050610adf565b50505050905090810190601f168015610b275780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610b4857600080fd5b505af1158015610b5c573d6000803e3d6000fd5b50505050506040513d6020811015610b7357600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b9050919050565b600080610bb9731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610b8e565b1115610c5a57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c516040805190810160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525061102a565b60019050611025565b6000610c7973c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610b8e565b1115610d1a5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d116040805190810160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525061102a565b60019050611025565b6000610d3973b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610b8e565b1115610dda5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610dd16040805190810160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525061102a565b60019050611025565b6000610df973146500cfd35b22e4a392fe0adc06de1a1368ed48610b8e565b1115610e9a5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e916040805190810160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525061102a565b60019050611025565b6000610eb9736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610b8e565b1115610f1c57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611025565b6000610f3b7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610b8e565b1115610f9e577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611025565b6000610fbd7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610b8e565b1115611020577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611025565b600090505b919050565b8060029080519060200190611040929190611044565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061108557805160ff19168380011785556110b3565b828001600101855582156110b3579182015b828111156110b2578251825591602001919060010190611097565b5b5090506110c091906110c4565b5090565b6110e691905b808211156110e25760008160009055506001016110ca565b5090565b905600a165627a7a723058208aa917f8471429023905ff64c1577653862cf50352c8d2a51cc7fbac48b6f63b0029",
  "deployedBytecode": "0x60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461006f57806338bbfa50146100e6578063a48bdb7c146101a3578063d33b722b14610233578063d98645c51461024a575b005b34801561007b57600080fd5b506100e46004803603810190808035600019169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061027d565b005b3480156100f257600080fd5b506101a16004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610375565b005b3480156101af57600080fd5b506101b861037a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f85780820151818401526020810190506101dd565b50505050905090810190601f1680156102255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023f57600080fd5b50610248610418565b005b34801561025657600080fd5b5061025f6104b6565b60405180826000191660001916815260200191505060405180910390f35b6102856104bc565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102be57600080fd5b80600690805190602001906102d4929190611044565b507f2815ee1f0b16b8cbb7d1e88f4b89c58a774fd2635ca81dcad8bfd04d735dc251816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033757808201518184015260208101905061031c565b50505050905090810190601f1680156103645780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b505050565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b505050505081565b6104b36040805190810160405280600481526020017f4950465300000000000000000000000000000000000000000000000000000000815250606060405190810160405280602e81526020017f516d633268705a46753365674642435a636d324a587250544d4d6259346b705281526020017f486750566e7178744571396e6557000000000000000000000000000000000000815250610703565b50565b60055481565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061052c5750600061052a6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b8e565b145b1561053d5761053b6000610b99565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156105c257600080fd5b505af11580156105d6573d6000803e3d6000fd5b505050506040513d60208110156105ec57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156106c357600080fd5b505af11580156106d7573d6000803e3d6000fd5b505050506040513d60208110156106ed57600080fd5b8101908080519060200190929190505050905090565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610775575060006107736000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b8e565b145b15610786576107846000610b99565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561080b57600080fd5b505af115801561081f573d6000803e3d6000fd5b505050506040513d602081101561083557600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610930578082015181840152602081019050610915565b50505050905090810190601f16801561095d5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561097c57600080fd5b505af1158015610990573d6000803e3d6000fd5b505050506040513d60208110156109a657600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156109dc5760006001029150610b87565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610a94578082015181840152602081019050610a79565b50505050905090810190601f168015610ac15780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610afa578082015181840152602081019050610adf565b50505050905090810190601f168015610b275780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610b4857600080fd5b505af1158015610b5c573d6000803e3d6000fd5b50505050506040513d6020811015610b7357600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b9050919050565b600080610bb9731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610b8e565b1115610c5a57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c516040805190810160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525061102a565b60019050611025565b6000610c7973c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610b8e565b1115610d1a5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d116040805190810160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525061102a565b60019050611025565b6000610d3973b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610b8e565b1115610dda5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610dd16040805190810160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525061102a565b60019050611025565b6000610df973146500cfd35b22e4a392fe0adc06de1a1368ed48610b8e565b1115610e9a5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e916040805190810160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525061102a565b60019050611025565b6000610eb9736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610b8e565b1115610f1c57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611025565b6000610f3b7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610b8e565b1115610f9e577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611025565b6000610fbd7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610b8e565b1115611020577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611025565b600090505b919050565b8060029080519060200190611040929190611044565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061108557805160ff19168380011785556110b3565b828001600101855582156110b3579182015b828111156110b2578251825591602001919060010190611097565b5b5090506110c091906110c4565b5090565b6110e691905b808211156110e25760008160009055506001016110ca565b5090565b905600a165627a7a723058208aa917f8471429023905ff64c1577653862cf50352c8d2a51cc7fbac48b6f63b0029",
  "sourceMap": "99:763:0:-;;;294:99;8:9:-1;5:2;;;30:1;27;20:12;5:2;294:99:0;345:42;317:3;;:71;;;;;;;;;;;;;;;;;;99:763;;;;;;",
  "deployedSourceMap": "99:763:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;623:186;;8:9:-1;5:2;;;30:1;27;20:12;5:2;623:186:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5326:69:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5326:69:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;163:21:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;163:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;163:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;511:108:0;;;;;;134:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;134:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;623:186;703:20;:18;:20::i;:::-;689:34;;:10;:34;;;680:44;;;;;;;;742:6;732:7;:16;;;;;;;;;;;;:::i;:::-;;779:25;797:6;779:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;779:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;623:186;;:::o;5326:69:2:-;;;;:::o;163:21:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;511:108::-;542:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:72::i;:::-;;511:108::o;134:25::-;;;;:::o;25084:112:2:-;25144:7;3171:1;3165:3;;;;;;;;;;;3157:15;;;3156:49;;;;3203:1;3176:25;3196:3;;;;;;;;;;;3176:11;:25::i;:::-;:28;3156:49;3153:89;;;3207:35;2887:1;3207:19;:35::i;:::-;;3153:89;3273:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3273:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3273:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3273:16:2;;;;;;;;;;;;;;;;3252:8;;:38;;;;;;;;;;;;;;;;;;25169:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25169:20:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25169:20:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25169:20:2;;;;;;;;;;;;;;;;25162:27;;25084:112;:::o;5815:306::-;5900:10;5921;3171:1;3165:3;;;;;;;;;;;3157:15;;;3156:49;;;;3203:1;3176:25;3196:3;;;;;;;;;;;3176:11;:25::i;:::-;:28;3156:49;3153:89;;;3207:35;2887:1;3207:19;:35::i;:::-;;3153:89;3273:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3273:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3273:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3273:16:2;;;;;;;;;;;;;;;;3252:8;;:38;;;;;;;;;;;;;;;;;;5934:8;;;;;;;;;;;:17;;;5952:10;5934:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5934:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5934:29:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5934:29:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5934:29:2;;;;;;;;;;;;;;;;5921:42;;6007:6;5995:11;:18;5985:7;:28;5977:5;:36;5973:50;;;6022:1;6015:8;;;;;;5973:50;6067:8;;;;;;;;;;;:14;;;6088:5;6095:1;6098:10;6110:3;6067:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6067:47:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6067:47:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6067:47:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6067:47:2;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6067:47:2;;;;;;;;;;;;;;;;6060:54;;3300:1;5815:306;;;;;:::o;25736:150::-;25798:10;25864:5;25852:18;25843:27;;25829:51;;;:::o;3447:1764::-;3510:4;3585:1;3529:55;3541:42;3529:11;:55::i;:::-;:57;3525:245;;;3639:42;3611:3;;:71;;;;;;;;;;;;;;;;;;3696:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;3755:4;3748:11;;;;3525:245;3839:1;3783:55;3795:42;3783:11;:55::i;:::-;:57;3779:254;;;3901:42;3873:3;;:71;;;;;;;;;;;;;;;;;;3958:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;4018:4;4011:11;;;;3779:254;4102:1;4046:55;4058:42;4046:11;:55::i;:::-;:57;4042:249;;;4162:42;4134:3;;:71;;;;;;;;;;;;;;;;;;4219:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;4276:4;4269:11;;;;4042:249;4360:1;4304:55;4316:42;4304:11;:55::i;:::-;:57;4300:253;;;4422:42;4394:3;;:71;;;;;;;;;;;;;;;;;;4479:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;4538:4;4531:11;;;;4300:253;4622:1;4566:55;4578:42;4566:11;:55::i;:::-;:57;4562:201;;;4684:42;4656:3;;:71;;;;;;;;;;;;;;;;;;4748:4;4741:11;;;;4562:201;4832:1;4776:55;4788:42;4776:11;:55::i;:::-;:57;4772:200;;;4893:42;4865:3;;:71;;;;;;;;;;;;;;;;;;4957:4;4950:11;;;;4772:200;5041:1;4985:55;4997:42;4985:11;:55::i;:::-;:57;4981:202;;;5104:42;5076:3;;:71;;;;;;;;;;;;;;;;;;5168:4;5161:11;;;;4981:202;5199:5;5192:12;;3447:1764;;;;:::o;33795:118::-;33893:13;33869:21;:37;;;;;;;;;;;;:::i;:::-;;33795:118;:::o;99:763:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.10;\n\nimport \"./usingOraclize.sol\";\n\n//contract extends usingOraclize contract\ncontract ipfs is usingOraclize {\n  bytes32 public oraclizeID;\n  string public results;\n  event LogOraclizeResult(string result);\n\n  //constructor put printed line from ethereum bridge in here!\n  function ipfs(){\n      OAR = OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475);\n  }\n  //QmautuU5VBF9KgYvhM5eB4VkXjMURXKVGEZWWWCcUxfVHy is the hash of 'Ethereum Meetup 28 march\\n' file stored on IPFS\n  function getIPFSData() {\n      oraclize_query(\"IPFS\", \"Qmc2hpZFu3egFBCZcm2JXrPTMMbY4kpRHgPVnqxtEq9neW\");\n  }\n\n  function __callback(bytes32 myid, string result) {\n      require (msg.sender == oraclize_cbAddress());\n      results = result;\n      // Trigger event\n      LogOraclizeResult(result);\n  }\n\n  //fallback function\n  function () payable{\n\n  }\n}\n",
  "sourcePath": "/Users/simonmullaney/Desktop/EthereumDevMeetup/contracts/IPFS.sol",
  "ast": {
    "absolutePath": "/Users/simonmullaney/Desktop/EthereumDevMeetup/contracts/IPFS.sol",
    "exportedSymbols": {
      "ipfs": [
        60
      ]
    },
    "id": 61,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/simonmullaney/Desktop/EthereumDevMeetup/contracts/usingOraclize.sol",
        "file": "./usingOraclize.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 61,
        "sourceUnit": 5866,
        "src": "26:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5865,
              "src": "116:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$5865",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "116:13:0"
          }
        ],
        "contractDependencies": [
          5865
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 60,
        "linearizedBaseContracts": [
          60,
          5865
        ],
        "name": "ipfs",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "oraclizeID",
            "nodeType": "VariableDeclaration",
            "scope": 60,
            "src": "134:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "134:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "results",
            "nodeType": "VariableDeclaration",
            "scope": 60,
            "src": "163:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "163:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12,
            "name": "LogOraclizeResult",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "212:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "211:15:0"
            },
            "src": "188:39:0"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "309:84:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "317:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$245",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "345:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 16,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "323:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$245_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "323:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$245",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "317:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$245",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "317:71:0"
                }
              ]
            },
            "documentation": null,
            "id": 22,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "ipfs",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "309:0:0"
            },
            "scope": 60,
            "src": "294:99:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "534:85:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "49504653",
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "557:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2eff44a149f4fdc0ebc091d05846eece9649b64f4c485b1f548136aaaf6483ac",
                          "typeString": "literal_string \"IPFS\""
                        },
                        "value": "IPFS"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "516d633268705a46753365674642435a636d324a587250544d4d6259346b7052486750566e7178744571396e6557",
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "565:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7edaae78536d5fb14cd742654c8f0457e6541eb7f9fd57f98cc4c3e563dd3086",
                          "typeString": "literal_string \"Qmc2hpZFu3egFBCZcm2JXrPTMMbY4kpRHgPVnqxtEq9neW\""
                        },
                        "value": "Qmc2hpZFu3egFBCZcm2JXrPTMMbY4kpRHgPVnqxtEq9neW"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2eff44a149f4fdc0ebc091d05846eece9649b64f4c485b1f548136aaaf6483ac",
                          "typeString": "literal_string \"IPFS\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7edaae78536d5fb14cd742654c8f0457e6541eb7f9fd57f98cc4c3e563dd3086",
                          "typeString": "literal_string \"Qmc2hpZFu3egFBCZcm2JXrPTMMbY4kpRHgPVnqxtEq9neW\""
                        }
                      ],
                      "id": 25,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        604,
                        646,
                        692,
                        736,
                        779,
                        824,
                        873,
                        920,
                        967,
                        1016,
                        1069,
                        1120,
                        1157,
                        1197,
                        1240,
                        1280,
                        1325,
                        1373,
                        1424,
                        1472,
                        1525,
                        1581,
                        1640,
                        1696,
                        1757,
                        1821,
                        1888,
                        1952,
                        2021,
                        2093,
                        2168,
                        2240,
                        2287,
                        2336,
                        2389,
                        2440,
                        2477,
                        2517,
                        2560,
                        2600,
                        2645,
                        2693,
                        2744,
                        2792,
                        2845,
                        2901,
                        2960,
                        3016,
                        3077,
                        3141,
                        3208,
                        3272,
                        3341,
                        3413,
                        3488,
                        3560
                      ],
                      "referencedDeclaration": 604,
                      "src": "542:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "542:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "542:72:0"
                }
              ]
            },
            "documentation": null,
            "id": 31,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getIPFSData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:0:0"
            },
            "scope": 60,
            "src": "511:108:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "672:137:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 39,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5880,
                            "src": "689:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "689:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3572,
                            "src": "703:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "703:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "689:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 38,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5883,
                        5884
                      ],
                      "referencedDeclaration": 5883,
                      "src": "680:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "680:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "680:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 46,
                      "name": "results",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "732:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "742:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "732:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "732:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "797:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 50,
                      "name": "LogOraclizeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "779:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "779:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "779:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 55,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "643:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "657:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "642:29:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "672:0:0"
            },
            "scope": 60,
            "src": "623:186:0",
            "stateMutability": "nonpayable",
            "superFunction": 507,
            "visibility": "public"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "854:6:0",
              "statements": []
            },
            "documentation": null,
            "id": 59,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:0:0"
            },
            "scope": 60,
            "src": "835:25:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 61,
        "src": "99:763:0"
      }
    ],
    "src": "0:863:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/simonmullaney/Desktop/EthereumDevMeetup/contracts/IPFS.sol",
    "exportedSymbols": {
      "ipfs": [
        60
      ]
    },
    "id": 61,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/simonmullaney/Desktop/EthereumDevMeetup/contracts/usingOraclize.sol",
        "file": "./usingOraclize.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 61,
        "sourceUnit": 5866,
        "src": "26:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5865,
              "src": "116:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$5865",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "116:13:0"
          }
        ],
        "contractDependencies": [
          5865
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 60,
        "linearizedBaseContracts": [
          60,
          5865
        ],
        "name": "ipfs",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "oraclizeID",
            "nodeType": "VariableDeclaration",
            "scope": 60,
            "src": "134:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "134:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "results",
            "nodeType": "VariableDeclaration",
            "scope": 60,
            "src": "163:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "163:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12,
            "name": "LogOraclizeResult",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "212:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "211:15:0"
            },
            "src": "188:39:0"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "309:84:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "317:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$245",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "345:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 16,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "323:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$245_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "323:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$245",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "317:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$245",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "317:71:0"
                }
              ]
            },
            "documentation": null,
            "id": 22,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "ipfs",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "309:0:0"
            },
            "scope": 60,
            "src": "294:99:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "534:85:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "49504653",
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "557:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2eff44a149f4fdc0ebc091d05846eece9649b64f4c485b1f548136aaaf6483ac",
                          "typeString": "literal_string \"IPFS\""
                        },
                        "value": "IPFS"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "516d633268705a46753365674642435a636d324a587250544d4d6259346b7052486750566e7178744571396e6557",
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "565:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7edaae78536d5fb14cd742654c8f0457e6541eb7f9fd57f98cc4c3e563dd3086",
                          "typeString": "literal_string \"Qmc2hpZFu3egFBCZcm2JXrPTMMbY4kpRHgPVnqxtEq9neW\""
                        },
                        "value": "Qmc2hpZFu3egFBCZcm2JXrPTMMbY4kpRHgPVnqxtEq9neW"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2eff44a149f4fdc0ebc091d05846eece9649b64f4c485b1f548136aaaf6483ac",
                          "typeString": "literal_string \"IPFS\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7edaae78536d5fb14cd742654c8f0457e6541eb7f9fd57f98cc4c3e563dd3086",
                          "typeString": "literal_string \"Qmc2hpZFu3egFBCZcm2JXrPTMMbY4kpRHgPVnqxtEq9neW\""
                        }
                      ],
                      "id": 25,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        604,
                        646,
                        692,
                        736,
                        779,
                        824,
                        873,
                        920,
                        967,
                        1016,
                        1069,
                        1120,
                        1157,
                        1197,
                        1240,
                        1280,
                        1325,
                        1373,
                        1424,
                        1472,
                        1525,
                        1581,
                        1640,
                        1696,
                        1757,
                        1821,
                        1888,
                        1952,
                        2021,
                        2093,
                        2168,
                        2240,
                        2287,
                        2336,
                        2389,
                        2440,
                        2477,
                        2517,
                        2560,
                        2600,
                        2645,
                        2693,
                        2744,
                        2792,
                        2845,
                        2901,
                        2960,
                        3016,
                        3077,
                        3141,
                        3208,
                        3272,
                        3341,
                        3413,
                        3488,
                        3560
                      ],
                      "referencedDeclaration": 604,
                      "src": "542:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "542:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "542:72:0"
                }
              ]
            },
            "documentation": null,
            "id": 31,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getIPFSData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:0:0"
            },
            "scope": 60,
            "src": "511:108:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "672:137:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 39,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5880,
                            "src": "689:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "689:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3572,
                            "src": "703:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "703:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "689:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 38,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5883,
                        5884
                      ],
                      "referencedDeclaration": 5883,
                      "src": "680:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "680:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "680:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 46,
                      "name": "results",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "732:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "742:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "732:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "732:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "797:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 50,
                      "name": "LogOraclizeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "779:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "779:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "779:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 55,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "643:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "657:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "642:29:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "672:0:0"
            },
            "scope": 60,
            "src": "623:186:0",
            "stateMutability": "nonpayable",
            "superFunction": 507,
            "visibility": "public"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "854:6:0",
              "statements": []
            },
            "documentation": null,
            "id": 59,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:0:0"
            },
            "scope": 60,
            "src": "835:25:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 61,
        "src": "99:763:0"
      }
    ],
    "src": "0:863:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "1521990274634": {
      "events": {
        "0x71f1a5645e51a2da828ffcf79cc17da88eb25e1bca8b9dced23210847a4769c1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "price",
              "type": "string"
            }
          ],
          "name": "LogPriceUpdated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x92bd1f6bc1fb192b115921ac8ae945a266fc86ae",
      "updated_at": 1521991834941
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-18T07:31:01.031Z"
}